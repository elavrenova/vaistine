@using Kendo.Mvc.UI

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>Склады</h2>
<div class="small">
    @(Html.Kendo().Grid<Store>()
          .Name("grid")
          .ColumnMenu(true)
          .ToolBar(tb => tb.Create())
          //.Editable(ed =>
          //{
          //    ed.Mode(GridEditMode.PopUp);
          //    ed.TemplateName("Store");
          //})
          .Resizable(r => r.Columns(true))
          .Reorderable(r => r.Columns(true))
          .Pageable().Filterable().Sortable()
          .Columns(c =>
          {
              c.Bound(x => x.Descr)
                  .Title("Название")
                  .ClientTemplate("<a href='" + Url.Action("Details", "Stores", new { area = "Stores" }) + "?id=#=Id#'" + ">#=Descr#</a>");
              //c.ForeignKey(x => x.OwnerId, (System.Collections.IEnumerable) ViewData["ownerid"], "Id", "Descr");
              c.ForeignKey(x => x.OwnerId, (System.Collections.IEnumerable)ViewData["ownerid"], "Id", "Descr")
                  .Title("Владелец")
                  .ClientTemplate("<a href='" + Url.Action("Details", "Cags", new { area = "Cags" }) + "?id=#=OwnerId#'" + ">#=getTextByValue(data)#</a>");
              c.Bound(x => x.IsAccount).ClientTemplate("# if (data.IsAccount) { # <i class='fa fa-check' aria-hidden='true'></i> # } #");
              c.Command(cmd =>
              {
                  cmd.Edit().Text(" ");
                  cmd.Destroy().Text(" ").HtmlAttributes(new { style = "color:red" });
              }).Width(200);
          })

          .DataSource(ds => ds.Ajax()
              .ServerOperation(true)
              .Model(m =>
              {
                  m.Id(x => x.Id);
                  m.Field(x => x.Id).DefaultValue(Guid.NewGuid());
              })
              .Read(r => r.Action("GetStores", "Kendo", new { area = "" }))
              .Update(u => u.Action("UpdateStore", "Kendo", new { area = "" }))
              .Destroy(d => d.Action("DestroyStore", "Kendo", new { area = "" }))
              .Create(c => c.Action("CreateStore", "Kendo", new { area = "" })))
          )
</div>

<script>
    var collection;
    //get's the text by value
    function getTextByValue(data) {
        var grid = $("#grid").data("kendoGrid");
        // В случае вложенных таблиц используется селектор класса заданного в описании таблицы .HtmlAttributes(new { class = "zzz" })
        //change the index of the column with your index
        var valuesCollection = grid.options.columns[1].values;
        //if the collection is empty - get it from the grid
        if (!collection) {
            collection = {};
            //Set the correct FKColumn index!
            for (var value in valuesCollection) {
                collection[valuesCollection[value].value] = valuesCollection[value].text;
            }
        }
        if (typeof (collection[data.OwnerId]) != "undefined") return collection[data.OwnerId];
        return "";
    }
</script>

