@using Kendo.Mvc.UI
@using Vaistine.Areas.Cags.Models
@*@model List<Cag>*@
@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<h2>Контрагенты</h2>
<div>
    @(Html.Kendo().Grid<Cag>()
          .Name("grid")
          .HtmlAttributes(new { @class = "zzz" })
          .ColumnMenu(true)
          .ToolBar(tb => tb.Create())
          //.Editable(ed =>
          //{
          //    ed.Mode(GridEditMode.PopUp);
          //    ed.TemplateName("Cag");
          //})
          .Resizable(r => r.Columns(true))
          .Reorderable(r => r.Columns(true))
          .Pageable().Filterable().Sortable()
          .Columns(c =>
          {
              c.Bound(x => x.Descr)
                  .Title("Название")
                  .ClientTemplate("<a href='" + Url.Action("Details", "Cags", new { area = "Cags" }) + "?id=#=Id#'" + ">#=Descr#</a>")
                  ;
              //c.ForeignKey(x => x.ParentId, (System.Collections.IEnumerable) ViewData["parentid"], "Id", "Descr").Title("Входит в состав");
              c.ForeignKey(x => x.ParentId, (System.Collections.IEnumerable)ViewData["parentid"], "Id", "Descr")
                  .Title("Входит в состав")
                  .ClientTemplate("<a href='" + Url.Action("Details", "Cags", new { area = "Cags" }) + "?id=#=ParentId#'" + ">#=getTextByValue(data)#</a>")
                  ;
              //c.Bound(x => x.AnnPeriod).Title("прием заявок").Editable("getfalse");
              //c.Bound(x => x.SaleDate).Format("{0:d}").Title("торги");
              c.Command(cmd =>
              {
                  cmd.Edit().Text(" ");
                  cmd.Destroy().Text(" ").HtmlAttributes(new { style = "color:red" });
              }).Width(200);
          })

          .DataSource(ds => ds.Ajax()
              .ServerOperation(true)
              .Model(m =>
              {
                  m.Id(x => x.Id);
              })
              .Read(r => r.Action("GetCags", "Kendo", new { area=""}))
              .Update(u => u.Action("UpdateCag", "Kendo", new { area = "" }))
              .Destroy(d => d.Action("DestroyCag", "Kendo", new { area = "" }))
              .Create(c => c.Action("CreateCag", "Kendo", new { area = "" })))
          .ClientDetailTemplateId("children")
          )
</div>

<script id="children" type="text/x-kendo-template">

    @(Html.Kendo().Grid<CagViewModel>()
                  .Name("c_#=Id#")
                  //.HtmlAttributes(new {@class = "zzz"})
                  .ColumnMenu(true)
                  .ToolBar(tb => tb.Create())
                  //.Editable(ed =>
                  //{
                  //    ed.Mode(GridEditMode.PopUp);
                  //    ed.TemplateName("Cag");
                  //})
                  .Resizable(r => r.Columns(true))
                  .Reorderable(r => r.Columns(true))
                  .Pageable().Filterable().Sortable()
                  .Columns(c =>
                  {
                      c.Bound(x => x.Descr)
                          .Title("Название")
                          .ClientTemplate("<a href='" + Url.Action("Details", "Cags", new { area = "Cags" }) + "?id=\\#=Id\\#'" + ">\\#=Descr\\#</a>")
                          ;
                      //c.ForeignKey(x => x.ParentId, (System.Collections.IEnumerable) ViewData["parentid"], "Id", "Descr").Title("Входит в состав");
                      //c.ForeignKey(x => x.ParentId, (System.Collections.IEnumerable)ViewData["parentid"], "Id", "Descr")
                      //                .Title("Входит в состав")
                      //                .ClientTemplate("<a href='" + Url.Action("Details", "Cags", new { area = "Cags" }) + "?id=#=ParentId#'" + ">#=getTextByValue(data)#</a>");
                      //c.Bound(x => x.AnnPeriod).Title("прием заявок").Editable("getfalse");
                      //c.Bound(x => x.SaleDate).Format("{0:d}").Title("торги");
                      c.Command(cmd =>
                      {
                          cmd.Edit().Text(" ");
                          cmd.Destroy().Text(" ").HtmlAttributes(new { style = "color:red" });
                      }).Width(200);
                  })

                  .DataSource(ds => ds.Ajax()
                      .ServerOperation(true)
                      .Model(m =>
                      {
                          m.Id(x => x.Id);
                          //m.Field(x => x.ParentId).DefaultValue("#=Id#");
                      })
                      .Read(r => r.Action("GetChildCags", "Kendo", new { area = "" , parentId="#=Id#"}))
                      .Update(u => u.Action("UpdateCag", "Kendo", new { area = "" }))
                      .Destroy(d => d.Action("DestroyCag", "Kendo", new { area = "" }))
                      .Create(c => c.Action("CreateChildCag", "Kendo", new { area = "", pId="#=Id#" })))
          .ClientDetailTemplateId("children")
          .ToClientTemplate())
</script>

<script>
    var collection;
    //get's the text by value
    function getTextByValue(data) {
        var grid = $(".zzz").data("kendoGrid");
        // В случае вложенных таблиц используется селектор класса заданного в описании таблицы .HtmlAttributes(new { class = "zzz" })
        //change the index of the column with your index
        var valuesCollection = grid.options.columns[1].values;
        //if the collection is empty - get it from the grid
        if (!collection) {
            collection = {};
            //Set the correct FKColumn index!
            for (var value in valuesCollection) {
                collection[valuesCollection[value].value] = valuesCollection[value].text;
            }
        }
        if (typeof (collection[data.ParentId]) != "undefined") return collection[data.ParentId];
        return "";
    }
</script>


